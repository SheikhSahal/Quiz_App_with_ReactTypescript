[{"D:\\Node\\Quiz_App_with_ReactTypescript\\quizapp\\src\\index.tsx":"1","D:\\Node\\Quiz_App_with_ReactTypescript\\quizapp\\src\\App.tsx":"2","D:\\Node\\Quiz_App_with_ReactTypescript\\quizapp\\src\\Quiz_service\\Quiz_service.ts":"3","D:\\Node\\Quiz_App_with_ReactTypescript\\quizapp\\src\\Components\\Questions.tsx":"4","D:\\Node\\Quiz_App_with_ReactTypescript\\quizapp\\src\\reportWebVitals.ts":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":2678,"mtime":1608551757921,"results":"8","hashOfConfig":"7"},{"size":830,"mtime":1608548903927,"results":"9","hashOfConfig":"7"},{"size":2945,"mtime":1608551052003,"results":"10","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ft1jjk",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Node\\Quiz_App_with_ReactTypescript\\quizapp\\src\\index.tsx",[],["24","25"],"D:\\Node\\Quiz_App_with_ReactTypescript\\quizapp\\src\\App.tsx",["26"],"import React, { Component } from 'react'\nimport { getQuizDetails } from './Quiz_service/Quiz_service'\nimport { QuestionType, Quiz } from './Classes/quiz_types'\nimport Questions from './Components/Questions'\n\n\nclass App extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      quiz: [],\n      crtstep: 0,\n      score: 0,\n      showresult: false\n    }\n  }\n\n  componentDidMount() {\n    async function fetchdatail() {\n      const questions: QuestionType[] = await getQuizDetails(5, 'easy');\n      console.log(questions);\n      return questions;\n    }\n\n    fetchdatail().then((response) => {\n      let data = [];\n      for (var item in response) {\n        data.push(response[item]);\n      }\n      this.setState({\n        quiz: data\n      })\n    });\n\n  }\n\n  handleSubmit = (e: React.FormEvent<EventTarget>, userans: string) => {\n    e.preventDefault();\n    const currentQuestion: QuestionType = this.state.quiz[this.state.crtstep];\n\n    console.log(\"Corrent answer: \" + currentQuestion.correct_answer + \" User Selection :\" + userans)\n    if (userans === currentQuestion.correct_answer) {\n      this.setState({\n        score: this.state.score + 1\n      })\n\n    }\n    if (this.state.crtstep !== this.state.quiz.length - 1) {\n      this.setState({\n        crtstep: this.state.crtstep + 1\n      })\n\n    }\n    else {\n      this.setState({\n        crtstep: 0,\n        score: 0,\n        showresult: true\n      })\n    }\n\n  }\n\n  render() {\n\n    if (this.state.showresult) {\n      return (\n        <div className=\"container\">\n          <br />\n          <div className=\"card\">\n            <div className=\"card-header\">\n              Result\n          </div>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">\n                Your Final score is : {this.state.score} out of {this.state.quiz.length}\n              </h5>\n              {/* <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p> */}\n            </div>\n          </div>\n        </div>\n\n      )\n    }\n    if (!this.state.quiz.length)\n      return (\n        <div className=\"container\">\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        </div>\n\n      )\n\n    return (\n      <div>\n        <Questions\n          options={this.state.quiz[this.state.crtstep].option}\n          question={this.state.quiz[this.state.crtstep].question}\n          callback={this.handleSubmit}\n        />\n        {/* {quizlist} */}\n      </div>\n    )\n  }\n}\n\nexport default App\n","D:\\Node\\Quiz_App_with_ReactTypescript\\quizapp\\src\\Quiz_service\\Quiz_service.ts",[],"D:\\Node\\Quiz_App_with_ReactTypescript\\quizapp\\src\\Components\\Questions.tsx",["27"],"D:\\Node\\Quiz_App_with_ReactTypescript\\quizapp\\src\\reportWebVitals.ts",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":3,"column":24,"nodeType":"34","messageId":"35","endLine":3,"endColumn":28},{"ruleId":"32","severity":1,"message":"36","line":1,"column":17,"nodeType":"34","messageId":"35","endLine":1,"endColumn":26},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"@typescript-eslint/no-unused-vars","'Quiz' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]